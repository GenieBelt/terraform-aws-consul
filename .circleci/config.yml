---
workspace_root: &workspace_root /go/src/github.com/hashicorp/terraform-aws-consul

defaults: &defaults
  working_directory: *workspace_root
  docker:
    - image: 087285199408.dkr.ecr.us-east-1.amazonaws.com/circle-ci-test-image-base:go1.13

version: 2
jobs:
  validate_terraform:
    docker:
      - image: hashicorp/terraform
    steps:
      - checkout
      - run:
          name: Validate Terraform Formatting
          command: '[ -z "$(terraform fmt -write=false)" ] || { terraform fmt -write=false -diff; exit 1; }'

  test:
    <<: *defaults
    steps:
      - checkout
      - run: echo 'export PATH=$HOME/terraform:$HOME/packer:$PATH' >> $BASH_ENV
      - attach_workspace:
          at: *workspace_root
      - run:
          command: |
            mkdir -p /tmp/logs
            run-go-tests --path test | tee /tmp/logs/test-all.log
      - run:
          command: terratest_log_parser --testlog /tmp/logs/test-all.log --outputdir /tmp/logs
          when: always
      - store_artifacts:
          path: /tmp/logs
      - store_test_results:
          path: /tmp/logs

  deploy:
    <<: *defaults
    steps:
      - checkout
      - run: echo 'export PATH=$HOME/terraform:$HOME/packer:$PATH' >> $BASH_ENV
      - run: sudo -E gruntwork-install --module-name "aws-helpers" --repo "https://github.com/gruntwork-io/module-ci" --tag "v0.12.2"
      - run: sudo -E gruntwork-install --module-name "git-helpers" --repo "https://github.com/gruntwork-io/module-ci" --tag "v0.12.2"
      - run: sudo -E gruntwork-install --module-name "build-helpers" --repo "https://github.com/gruntwork-io/module-ci" --tag "v0.12.2"

      # We generally only want to build AMIs on new releases, but when we are setting up AMIs in a new account for the
      # first time, we want to build the AMIs but NOT run automated tests, since those tests will fail without an existing
      # AMI already in the AWS Account.
      - run: /go/src/github.com/hashicorp/terraform-aws-consul/_ci/publish-amis.sh "ubuntu16-ami"
      - run: /go/src/github.com/hashicorp/terraform-aws-consul/_ci/publish-amis.sh "amazon-linux-ami"

workflows:
  version: 2
  build-and-test:
    jobs:
      - test:
          filters:
            branches:
              ignore: publish-amis
      - deploy:
          filters:
            branches:
              only: publish-amis
            tags:
              only: /^v.*/
  nightly-test:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build
      - test:
          requires:
            - build
